package com.pluralsight;

import java.io.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Handles the generation and saving of order receipts to files.
 * Each receipt is saved with a unique filename based on the current timestamp
 * into a designated receipts' folder.
 */
public class Receipt {
    //          === Instance Variables ===
    private static final String RECEIPTS_FOLDER = "Receipts";
    private Order order;
    private String fileName;

    //          === Constructor ===
    public Receipt(Order order) {
        this.order = order;
        this.fileName = generateFileName();
    }

    //          === Methods ===
    /**
     * Saves the formatted receipt content for the associated order to a text file.
     * The file is stored in the {@value #RECEIPTS_FOLDER} directory.
     * If the directory does not exist, an attempt is made to create it.
     * <p>
     * The receipt file includes a header with a deli name, an order number derived
     * from the filename, the current date and time, followed by the detailed
     * order information generated by {@link Order#generateReceiptFormat()}.
     * </p>
     * A message is printed to the console indicating whether the save was successful
     * or if an error occurred.
     */
    public void saveToFile() {
        File folder = new File(RECEIPTS_FOLDER);
        if (!folder.exists()) {
            boolean created = folder.mkdir();
            if (!created) {
                System.out.println("Failed to create receipts folder.\n");
                return;
            }
        }

        String filePath = RECEIPTS_FOLDER + "/" + this.fileName;

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
            writer.write("=== DELI-cious Receipt ===\n");
            writer.write("Order #: " + fileName.replace(".txt", "") + "\n");
            writer.write("Date: " + LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")) + "\n\n");

            writer.write(order.generateReceiptFormat());

            System.out.println("Receipt saved: " + fileName);
        }catch (IOException e) {
            System.out.println("Error saving receipt: " + e.getMessage());
        }
    }
    
    /**
     * Generates a unique filename for a receipt based on the current date and time.
     * The format of the filename is "yyyyMMdd-HHmmss.txt".
     *
     * @return A string representing the generated filename.
     */
    private String generateFileName() {
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd-HHmmss");
        return now.format(formatter) + ".txt";
    }
}
